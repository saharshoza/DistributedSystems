// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: message.proto

#include "message.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/io/zero_copy_stream_impl_lite.h>
// This is a temporary google only hack
#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
#include "third_party/protobuf/version.h"
#endif
// @@protoc_insertion_point(includes)
namespace message {
class CausalMessage_Matrix_VectorDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CausalMessage_Matrix_Vector>
      _instance;
} _CausalMessage_Matrix_Vector_default_instance_;
class CausalMessage_MatrixDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CausalMessage_Matrix>
      _instance;
} _CausalMessage_Matrix_default_instance_;
class CausalMessageDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CausalMessage>
      _instance;
} _CausalMessage_default_instance_;
}  // namespace message
namespace protobuf_message_2eproto {
void InitDefaultsCausalMessage_Matrix_VectorImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::message::_CausalMessage_Matrix_Vector_default_instance_;
    new (ptr) ::message::CausalMessage_Matrix_Vector();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::message::CausalMessage_Matrix_Vector::InitAsDefaultInstance();
}

void InitDefaultsCausalMessage_Matrix_Vector() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsCausalMessage_Matrix_VectorImpl);
}

void InitDefaultsCausalMessage_MatrixImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_message_2eproto::InitDefaultsCausalMessage_Matrix_Vector();
  {
    void* ptr = &::message::_CausalMessage_Matrix_default_instance_;
    new (ptr) ::message::CausalMessage_Matrix();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::message::CausalMessage_Matrix::InitAsDefaultInstance();
}

void InitDefaultsCausalMessage_Matrix() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsCausalMessage_MatrixImpl);
}

void InitDefaultsCausalMessageImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_message_2eproto::InitDefaultsCausalMessage_Matrix();
  {
    void* ptr = &::message::_CausalMessage_default_instance_;
    new (ptr) ::message::CausalMessage();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::message::CausalMessage::InitAsDefaultInstance();
}

void InitDefaultsCausalMessage() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsCausalMessageImpl);
}

}  // namespace protobuf_message_2eproto
namespace message {

// ===================================================================

void CausalMessage_Matrix_Vector::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CausalMessage_Matrix_Vector::kEventFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CausalMessage_Matrix_Vector::CausalMessage_Matrix_Vector()
  : ::google::protobuf::MessageLite(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_message_2eproto::InitDefaultsCausalMessage_Matrix_Vector();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:message.CausalMessage.Matrix.Vector)
}
CausalMessage_Matrix_Vector::CausalMessage_Matrix_Vector(const CausalMessage_Matrix_Vector& from)
  : ::google::protobuf::MessageLite(),
      _internal_metadata_(NULL),
      event_(from.event_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:message.CausalMessage.Matrix.Vector)
}

void CausalMessage_Matrix_Vector::SharedCtor() {
  _cached_size_ = 0;
}

CausalMessage_Matrix_Vector::~CausalMessage_Matrix_Vector() {
  // @@protoc_insertion_point(destructor:message.CausalMessage.Matrix.Vector)
  SharedDtor();
}

void CausalMessage_Matrix_Vector::SharedDtor() {
}

void CausalMessage_Matrix_Vector::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const CausalMessage_Matrix_Vector& CausalMessage_Matrix_Vector::default_instance() {
  ::protobuf_message_2eproto::InitDefaultsCausalMessage_Matrix_Vector();
  return *internal_default_instance();
}

CausalMessage_Matrix_Vector* CausalMessage_Matrix_Vector::New(::google::protobuf::Arena* arena) const {
  CausalMessage_Matrix_Vector* n = new CausalMessage_Matrix_Vector;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CausalMessage_Matrix_Vector::Clear() {
// @@protoc_insertion_point(message_clear_start:message.CausalMessage.Matrix.Vector)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  event_.Clear();
  _internal_metadata_.Clear();
}

bool CausalMessage_Matrix_Vector::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::LiteUnknownFieldSetter unknown_fields_setter(
      &_internal_metadata_);
  ::google::protobuf::io::StringOutputStream unknown_fields_output(
      unknown_fields_setter.buffer());
  ::google::protobuf::io::CodedOutputStream unknown_fields_stream(
      &unknown_fields_output, false);
  // @@protoc_insertion_point(parse_start:message.CausalMessage.Matrix.Vector)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated int32 event = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, this->mutable_event())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 1, 10u, input, this->mutable_event())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(
            input, tag, &unknown_fields_stream));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:message.CausalMessage.Matrix.Vector)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:message.CausalMessage.Matrix.Vector)
  return false;
#undef DO_
}

void CausalMessage_Matrix_Vector::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:message.CausalMessage.Matrix.Vector)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated int32 event = 1;
  if (this->event_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(1, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _event_cached_byte_size_));
  }
  for (int i = 0, n = this->event_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32NoTag(
      this->event(i), output);
  }

  output->WriteRaw((::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()).data(),
                   static_cast<int>((::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()).size()));
  // @@protoc_insertion_point(serialize_end:message.CausalMessage.Matrix.Vector)
}

size_t CausalMessage_Matrix_Vector::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:message.CausalMessage.Matrix.Vector)
  size_t total_size = 0;

  total_size += (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()).size();

  // repeated int32 event = 1;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      Int32Size(this->event_);
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _event_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CausalMessage_Matrix_Vector::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::google::protobuf::down_cast<const CausalMessage_Matrix_Vector*>(&from));
}

void CausalMessage_Matrix_Vector::MergeFrom(const CausalMessage_Matrix_Vector& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:message.CausalMessage.Matrix.Vector)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  event_.MergeFrom(from.event_);
}

void CausalMessage_Matrix_Vector::CopyFrom(const CausalMessage_Matrix_Vector& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:message.CausalMessage.Matrix.Vector)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CausalMessage_Matrix_Vector::IsInitialized() const {
  return true;
}

void CausalMessage_Matrix_Vector::Swap(CausalMessage_Matrix_Vector* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CausalMessage_Matrix_Vector::InternalSwap(CausalMessage_Matrix_Vector* other) {
  using std::swap;
  event_.InternalSwap(&other->event_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::std::string CausalMessage_Matrix_Vector::GetTypeName() const {
  return "message.CausalMessage.Matrix.Vector";
}


// ===================================================================

void CausalMessage_Matrix::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CausalMessage_Matrix::kVectorsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CausalMessage_Matrix::CausalMessage_Matrix()
  : ::google::protobuf::MessageLite(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_message_2eproto::InitDefaultsCausalMessage_Matrix();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:message.CausalMessage.Matrix)
}
CausalMessage_Matrix::CausalMessage_Matrix(const CausalMessage_Matrix& from)
  : ::google::protobuf::MessageLite(),
      _internal_metadata_(NULL),
      vectors_(from.vectors_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:message.CausalMessage.Matrix)
}

void CausalMessage_Matrix::SharedCtor() {
  _cached_size_ = 0;
}

CausalMessage_Matrix::~CausalMessage_Matrix() {
  // @@protoc_insertion_point(destructor:message.CausalMessage.Matrix)
  SharedDtor();
}

void CausalMessage_Matrix::SharedDtor() {
}

void CausalMessage_Matrix::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const CausalMessage_Matrix& CausalMessage_Matrix::default_instance() {
  ::protobuf_message_2eproto::InitDefaultsCausalMessage_Matrix();
  return *internal_default_instance();
}

CausalMessage_Matrix* CausalMessage_Matrix::New(::google::protobuf::Arena* arena) const {
  CausalMessage_Matrix* n = new CausalMessage_Matrix;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CausalMessage_Matrix::Clear() {
// @@protoc_insertion_point(message_clear_start:message.CausalMessage.Matrix)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  vectors_.Clear();
  _internal_metadata_.Clear();
}

bool CausalMessage_Matrix::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::LiteUnknownFieldSetter unknown_fields_setter(
      &_internal_metadata_);
  ::google::protobuf::io::StringOutputStream unknown_fields_output(
      unknown_fields_setter.buffer());
  ::google::protobuf::io::CodedOutputStream unknown_fields_stream(
      &unknown_fields_output, false);
  // @@protoc_insertion_point(parse_start:message.CausalMessage.Matrix)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .message.CausalMessage.Matrix.Vector vectors = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(input, add_vectors()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(
            input, tag, &unknown_fields_stream));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:message.CausalMessage.Matrix)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:message.CausalMessage.Matrix)
  return false;
#undef DO_
}

void CausalMessage_Matrix::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:message.CausalMessage.Matrix)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .message.CausalMessage.Matrix.Vector vectors = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->vectors_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessage(
      1, this->vectors(static_cast<int>(i)), output);
  }

  output->WriteRaw((::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()).data(),
                   static_cast<int>((::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()).size()));
  // @@protoc_insertion_point(serialize_end:message.CausalMessage.Matrix)
}

size_t CausalMessage_Matrix::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:message.CausalMessage.Matrix)
  size_t total_size = 0;

  total_size += (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()).size();

  // repeated .message.CausalMessage.Matrix.Vector vectors = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->vectors_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->vectors(static_cast<int>(i)));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CausalMessage_Matrix::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::google::protobuf::down_cast<const CausalMessage_Matrix*>(&from));
}

void CausalMessage_Matrix::MergeFrom(const CausalMessage_Matrix& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:message.CausalMessage.Matrix)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  vectors_.MergeFrom(from.vectors_);
}

void CausalMessage_Matrix::CopyFrom(const CausalMessage_Matrix& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:message.CausalMessage.Matrix)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CausalMessage_Matrix::IsInitialized() const {
  return true;
}

void CausalMessage_Matrix::Swap(CausalMessage_Matrix* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CausalMessage_Matrix::InternalSwap(CausalMessage_Matrix* other) {
  using std::swap;
  vectors_.InternalSwap(&other->vectors_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::std::string CausalMessage_Matrix::GetTypeName() const {
  return "message.CausalMessage.Matrix";
}


// ===================================================================

void CausalMessage::InitAsDefaultInstance() {
  ::message::_CausalMessage_default_instance_._instance.get_mutable()->matrix_ = const_cast< ::message::CausalMessage_Matrix*>(
      ::message::CausalMessage_Matrix::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CausalMessage::kMessageBdyFieldNumber;
const int CausalMessage::kMatrixFieldNumber;
const int CausalMessage::kSrcIDFieldNumber;
const int CausalMessage::kDestIDFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CausalMessage::CausalMessage()
  : ::google::protobuf::MessageLite(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_message_2eproto::InitDefaultsCausalMessage();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:message.CausalMessage)
}
CausalMessage::CausalMessage(const CausalMessage& from)
  : ::google::protobuf::MessageLite(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  messagebdy_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.messagebdy().size() > 0) {
    messagebdy_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.messagebdy_);
  }
  if (from.has_matrix()) {
    matrix_ = new ::message::CausalMessage_Matrix(*from.matrix_);
  } else {
    matrix_ = NULL;
  }
  ::memcpy(&srcid_, &from.srcid_,
    static_cast<size_t>(reinterpret_cast<char*>(&destid_) -
    reinterpret_cast<char*>(&srcid_)) + sizeof(destid_));
  // @@protoc_insertion_point(copy_constructor:message.CausalMessage)
}

void CausalMessage::SharedCtor() {
  messagebdy_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&matrix_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&destid_) -
      reinterpret_cast<char*>(&matrix_)) + sizeof(destid_));
  _cached_size_ = 0;
}

CausalMessage::~CausalMessage() {
  // @@protoc_insertion_point(destructor:message.CausalMessage)
  SharedDtor();
}

void CausalMessage::SharedDtor() {
  messagebdy_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete matrix_;
}

void CausalMessage::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const CausalMessage& CausalMessage::default_instance() {
  ::protobuf_message_2eproto::InitDefaultsCausalMessage();
  return *internal_default_instance();
}

CausalMessage* CausalMessage::New(::google::protobuf::Arena* arena) const {
  CausalMessage* n = new CausalMessage;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CausalMessage::Clear() {
// @@protoc_insertion_point(message_clear_start:message.CausalMessage)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  messagebdy_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == NULL && matrix_ != NULL) {
    delete matrix_;
  }
  matrix_ = NULL;
  ::memset(&srcid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&destid_) -
      reinterpret_cast<char*>(&srcid_)) + sizeof(destid_));
  _internal_metadata_.Clear();
}

bool CausalMessage::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::LiteUnknownFieldSetter unknown_fields_setter(
      &_internal_metadata_);
  ::google::protobuf::io::StringOutputStream unknown_fields_output(
      unknown_fields_setter.buffer());
  ::google::protobuf::io::CodedOutputStream unknown_fields_stream(
      &unknown_fields_output, false);
  // @@protoc_insertion_point(parse_start:message.CausalMessage)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string messageBdy = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_messagebdy()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->messagebdy().data(), static_cast<int>(this->messagebdy().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "message.CausalMessage.messageBdy"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .message.CausalMessage.Matrix matrix = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_matrix()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 srcID = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &srcid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 destID = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &destid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(
            input, tag, &unknown_fields_stream));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:message.CausalMessage)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:message.CausalMessage)
  return false;
#undef DO_
}

void CausalMessage::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:message.CausalMessage)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string messageBdy = 1;
  if (this->messagebdy().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->messagebdy().data(), static_cast<int>(this->messagebdy().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "message.CausalMessage.messageBdy");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->messagebdy(), output);
  }

  // .message.CausalMessage.Matrix matrix = 2;
  if (this->has_matrix()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessage(
      2, *this->matrix_, output);
  }

  // int32 srcID = 3;
  if (this->srcid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->srcid(), output);
  }

  // int32 destID = 4;
  if (this->destid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->destid(), output);
  }

  output->WriteRaw((::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()).data(),
                   static_cast<int>((::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()).size()));
  // @@protoc_insertion_point(serialize_end:message.CausalMessage)
}

size_t CausalMessage::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:message.CausalMessage)
  size_t total_size = 0;

  total_size += (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()).size();

  // string messageBdy = 1;
  if (this->messagebdy().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->messagebdy());
  }

  // .message.CausalMessage.Matrix matrix = 2;
  if (this->has_matrix()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->matrix_);
  }

  // int32 srcID = 3;
  if (this->srcid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->srcid());
  }

  // int32 destID = 4;
  if (this->destid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->destid());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CausalMessage::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::google::protobuf::down_cast<const CausalMessage*>(&from));
}

void CausalMessage::MergeFrom(const CausalMessage& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:message.CausalMessage)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.messagebdy().size() > 0) {

    messagebdy_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.messagebdy_);
  }
  if (from.has_matrix()) {
    mutable_matrix()->::message::CausalMessage_Matrix::MergeFrom(from.matrix());
  }
  if (from.srcid() != 0) {
    set_srcid(from.srcid());
  }
  if (from.destid() != 0) {
    set_destid(from.destid());
  }
}

void CausalMessage::CopyFrom(const CausalMessage& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:message.CausalMessage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CausalMessage::IsInitialized() const {
  return true;
}

void CausalMessage::Swap(CausalMessage* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CausalMessage::InternalSwap(CausalMessage* other) {
  using std::swap;
  messagebdy_.Swap(&other->messagebdy_);
  swap(matrix_, other->matrix_);
  swap(srcid_, other->srcid_);
  swap(destid_, other->destid_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::std::string CausalMessage::GetTypeName() const {
  return "message.CausalMessage";
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace message

// @@protoc_insertion_point(global_scope)
