// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: message.proto

#ifndef PROTOBUF_message_2eproto__INCLUDED
#define PROTOBUF_message_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3005000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3005001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata_lite.h>
#include <google/protobuf/message_lite.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
// @@protoc_insertion_point(includes)

namespace protobuf_message_2eproto {
// Internal implementation detail -- do not use these members.
struct TableStruct {
  static const ::google::protobuf::internal::ParseTableField entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable schema[3];
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static const ::google::protobuf::uint32 offsets[];
};
void InitDefaultsCausalMessage_Matrix_VectorImpl();
void InitDefaultsCausalMessage_Matrix_Vector();
void InitDefaultsCausalMessage_MatrixImpl();
void InitDefaultsCausalMessage_Matrix();
void InitDefaultsCausalMessageImpl();
void InitDefaultsCausalMessage();
inline void InitDefaults() {
  InitDefaultsCausalMessage_Matrix_Vector();
  InitDefaultsCausalMessage_Matrix();
  InitDefaultsCausalMessage();
}
}  // namespace protobuf_message_2eproto
namespace message {
class CausalMessage;
class CausalMessageDefaultTypeInternal;
extern CausalMessageDefaultTypeInternal _CausalMessage_default_instance_;
class CausalMessage_Matrix;
class CausalMessage_MatrixDefaultTypeInternal;
extern CausalMessage_MatrixDefaultTypeInternal _CausalMessage_Matrix_default_instance_;
class CausalMessage_Matrix_Vector;
class CausalMessage_Matrix_VectorDefaultTypeInternal;
extern CausalMessage_Matrix_VectorDefaultTypeInternal _CausalMessage_Matrix_Vector_default_instance_;
}  // namespace message
namespace message {

// ===================================================================

class CausalMessage_Matrix_Vector : public ::google::protobuf::MessageLite /* @@protoc_insertion_point(class_definition:message.CausalMessage.Matrix.Vector) */ {
 public:
  CausalMessage_Matrix_Vector();
  virtual ~CausalMessage_Matrix_Vector();

  CausalMessage_Matrix_Vector(const CausalMessage_Matrix_Vector& from);

  inline CausalMessage_Matrix_Vector& operator=(const CausalMessage_Matrix_Vector& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CausalMessage_Matrix_Vector(CausalMessage_Matrix_Vector&& from) noexcept
    : CausalMessage_Matrix_Vector() {
    *this = ::std::move(from);
  }

  inline CausalMessage_Matrix_Vector& operator=(CausalMessage_Matrix_Vector&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const CausalMessage_Matrix_Vector& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CausalMessage_Matrix_Vector* internal_default_instance() {
    return reinterpret_cast<const CausalMessage_Matrix_Vector*>(
               &_CausalMessage_Matrix_Vector_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    0;

  void Swap(CausalMessage_Matrix_Vector* other);
  friend void swap(CausalMessage_Matrix_Vector& a, CausalMessage_Matrix_Vector& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CausalMessage_Matrix_Vector* New() const PROTOBUF_FINAL { return New(NULL); }

  CausalMessage_Matrix_Vector* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from)
    PROTOBUF_FINAL;
  void CopyFrom(const CausalMessage_Matrix_Vector& from);
  void MergeFrom(const CausalMessage_Matrix_Vector& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  void DiscardUnknownFields();
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(CausalMessage_Matrix_Vector* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::std::string GetTypeName() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated int32 event = 1;
  int event_size() const;
  void clear_event();
  static const int kEventFieldNumber = 1;
  ::google::protobuf::int32 event(int index) const;
  void set_event(int index, ::google::protobuf::int32 value);
  void add_event(::google::protobuf::int32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      event() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_event();

  // @@protoc_insertion_point(class_scope:message.CausalMessage.Matrix.Vector)
 private:

  ::google::protobuf::internal::InternalMetadataWithArenaLite _internal_metadata_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > event_;
  mutable int _event_cached_byte_size_;
  mutable int _cached_size_;
  friend struct ::protobuf_message_2eproto::TableStruct;
  friend void ::protobuf_message_2eproto::InitDefaultsCausalMessage_Matrix_VectorImpl();
};
// -------------------------------------------------------------------

class CausalMessage_Matrix : public ::google::protobuf::MessageLite /* @@protoc_insertion_point(class_definition:message.CausalMessage.Matrix) */ {
 public:
  CausalMessage_Matrix();
  virtual ~CausalMessage_Matrix();

  CausalMessage_Matrix(const CausalMessage_Matrix& from);

  inline CausalMessage_Matrix& operator=(const CausalMessage_Matrix& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CausalMessage_Matrix(CausalMessage_Matrix&& from) noexcept
    : CausalMessage_Matrix() {
    *this = ::std::move(from);
  }

  inline CausalMessage_Matrix& operator=(CausalMessage_Matrix&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const CausalMessage_Matrix& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CausalMessage_Matrix* internal_default_instance() {
    return reinterpret_cast<const CausalMessage_Matrix*>(
               &_CausalMessage_Matrix_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    1;

  void Swap(CausalMessage_Matrix* other);
  friend void swap(CausalMessage_Matrix& a, CausalMessage_Matrix& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CausalMessage_Matrix* New() const PROTOBUF_FINAL { return New(NULL); }

  CausalMessage_Matrix* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from)
    PROTOBUF_FINAL;
  void CopyFrom(const CausalMessage_Matrix& from);
  void MergeFrom(const CausalMessage_Matrix& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  void DiscardUnknownFields();
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(CausalMessage_Matrix* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::std::string GetTypeName() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef CausalMessage_Matrix_Vector Vector;

  // accessors -------------------------------------------------------

  // repeated .message.CausalMessage.Matrix.Vector vectors = 1;
  int vectors_size() const;
  void clear_vectors();
  static const int kVectorsFieldNumber = 1;
  const ::message::CausalMessage_Matrix_Vector& vectors(int index) const;
  ::message::CausalMessage_Matrix_Vector* mutable_vectors(int index);
  ::message::CausalMessage_Matrix_Vector* add_vectors();
  ::google::protobuf::RepeatedPtrField< ::message::CausalMessage_Matrix_Vector >*
      mutable_vectors();
  const ::google::protobuf::RepeatedPtrField< ::message::CausalMessage_Matrix_Vector >&
      vectors() const;

  // @@protoc_insertion_point(class_scope:message.CausalMessage.Matrix)
 private:

  ::google::protobuf::internal::InternalMetadataWithArenaLite _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::message::CausalMessage_Matrix_Vector > vectors_;
  mutable int _cached_size_;
  friend struct ::protobuf_message_2eproto::TableStruct;
  friend void ::protobuf_message_2eproto::InitDefaultsCausalMessage_MatrixImpl();
};
// -------------------------------------------------------------------

class CausalMessage : public ::google::protobuf::MessageLite /* @@protoc_insertion_point(class_definition:message.CausalMessage) */ {
 public:
  CausalMessage();
  virtual ~CausalMessage();

  CausalMessage(const CausalMessage& from);

  inline CausalMessage& operator=(const CausalMessage& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CausalMessage(CausalMessage&& from) noexcept
    : CausalMessage() {
    *this = ::std::move(from);
  }

  inline CausalMessage& operator=(CausalMessage&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const CausalMessage& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CausalMessage* internal_default_instance() {
    return reinterpret_cast<const CausalMessage*>(
               &_CausalMessage_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    2;

  void Swap(CausalMessage* other);
  friend void swap(CausalMessage& a, CausalMessage& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CausalMessage* New() const PROTOBUF_FINAL { return New(NULL); }

  CausalMessage* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from)
    PROTOBUF_FINAL;
  void CopyFrom(const CausalMessage& from);
  void MergeFrom(const CausalMessage& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  void DiscardUnknownFields();
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(CausalMessage* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::std::string GetTypeName() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef CausalMessage_Matrix Matrix;

  // accessors -------------------------------------------------------

  // string messageBdy = 1;
  void clear_messagebdy();
  static const int kMessageBdyFieldNumber = 1;
  const ::std::string& messagebdy() const;
  void set_messagebdy(const ::std::string& value);
  #if LANG_CXX11
  void set_messagebdy(::std::string&& value);
  #endif
  void set_messagebdy(const char* value);
  void set_messagebdy(const char* value, size_t size);
  ::std::string* mutable_messagebdy();
  ::std::string* release_messagebdy();
  void set_allocated_messagebdy(::std::string* messagebdy);

  // .message.CausalMessage.Matrix matrix = 2;
  bool has_matrix() const;
  void clear_matrix();
  static const int kMatrixFieldNumber = 2;
  const ::message::CausalMessage_Matrix& matrix() const;
  ::message::CausalMessage_Matrix* release_matrix();
  ::message::CausalMessage_Matrix* mutable_matrix();
  void set_allocated_matrix(::message::CausalMessage_Matrix* matrix);

  // int32 srcID = 3;
  void clear_srcid();
  static const int kSrcIDFieldNumber = 3;
  ::google::protobuf::int32 srcid() const;
  void set_srcid(::google::protobuf::int32 value);

  // int32 destID = 4;
  void clear_destid();
  static const int kDestIDFieldNumber = 4;
  ::google::protobuf::int32 destid() const;
  void set_destid(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:message.CausalMessage)
 private:

  ::google::protobuf::internal::InternalMetadataWithArenaLite _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr messagebdy_;
  ::message::CausalMessage_Matrix* matrix_;
  ::google::protobuf::int32 srcid_;
  ::google::protobuf::int32 destid_;
  mutable int _cached_size_;
  friend struct ::protobuf_message_2eproto::TableStruct;
  friend void ::protobuf_message_2eproto::InitDefaultsCausalMessageImpl();
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// CausalMessage_Matrix_Vector

// repeated int32 event = 1;
inline int CausalMessage_Matrix_Vector::event_size() const {
  return event_.size();
}
inline void CausalMessage_Matrix_Vector::clear_event() {
  event_.Clear();
}
inline ::google::protobuf::int32 CausalMessage_Matrix_Vector::event(int index) const {
  // @@protoc_insertion_point(field_get:message.CausalMessage.Matrix.Vector.event)
  return event_.Get(index);
}
inline void CausalMessage_Matrix_Vector::set_event(int index, ::google::protobuf::int32 value) {
  event_.Set(index, value);
  // @@protoc_insertion_point(field_set:message.CausalMessage.Matrix.Vector.event)
}
inline void CausalMessage_Matrix_Vector::add_event(::google::protobuf::int32 value) {
  event_.Add(value);
  // @@protoc_insertion_point(field_add:message.CausalMessage.Matrix.Vector.event)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
CausalMessage_Matrix_Vector::event() const {
  // @@protoc_insertion_point(field_list:message.CausalMessage.Matrix.Vector.event)
  return event_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
CausalMessage_Matrix_Vector::mutable_event() {
  // @@protoc_insertion_point(field_mutable_list:message.CausalMessage.Matrix.Vector.event)
  return &event_;
}

// -------------------------------------------------------------------

// CausalMessage_Matrix

// repeated .message.CausalMessage.Matrix.Vector vectors = 1;
inline int CausalMessage_Matrix::vectors_size() const {
  return vectors_.size();
}
inline void CausalMessage_Matrix::clear_vectors() {
  vectors_.Clear();
}
inline const ::message::CausalMessage_Matrix_Vector& CausalMessage_Matrix::vectors(int index) const {
  // @@protoc_insertion_point(field_get:message.CausalMessage.Matrix.vectors)
  return vectors_.Get(index);
}
inline ::message::CausalMessage_Matrix_Vector* CausalMessage_Matrix::mutable_vectors(int index) {
  // @@protoc_insertion_point(field_mutable:message.CausalMessage.Matrix.vectors)
  return vectors_.Mutable(index);
}
inline ::message::CausalMessage_Matrix_Vector* CausalMessage_Matrix::add_vectors() {
  // @@protoc_insertion_point(field_add:message.CausalMessage.Matrix.vectors)
  return vectors_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::message::CausalMessage_Matrix_Vector >*
CausalMessage_Matrix::mutable_vectors() {
  // @@protoc_insertion_point(field_mutable_list:message.CausalMessage.Matrix.vectors)
  return &vectors_;
}
inline const ::google::protobuf::RepeatedPtrField< ::message::CausalMessage_Matrix_Vector >&
CausalMessage_Matrix::vectors() const {
  // @@protoc_insertion_point(field_list:message.CausalMessage.Matrix.vectors)
  return vectors_;
}

// -------------------------------------------------------------------

// CausalMessage

// string messageBdy = 1;
inline void CausalMessage::clear_messagebdy() {
  messagebdy_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& CausalMessage::messagebdy() const {
  // @@protoc_insertion_point(field_get:message.CausalMessage.messageBdy)
  return messagebdy_.GetNoArena();
}
inline void CausalMessage::set_messagebdy(const ::std::string& value) {
  
  messagebdy_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:message.CausalMessage.messageBdy)
}
#if LANG_CXX11
inline void CausalMessage::set_messagebdy(::std::string&& value) {
  
  messagebdy_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:message.CausalMessage.messageBdy)
}
#endif
inline void CausalMessage::set_messagebdy(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  messagebdy_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:message.CausalMessage.messageBdy)
}
inline void CausalMessage::set_messagebdy(const char* value, size_t size) {
  
  messagebdy_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:message.CausalMessage.messageBdy)
}
inline ::std::string* CausalMessage::mutable_messagebdy() {
  
  // @@protoc_insertion_point(field_mutable:message.CausalMessage.messageBdy)
  return messagebdy_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CausalMessage::release_messagebdy() {
  // @@protoc_insertion_point(field_release:message.CausalMessage.messageBdy)
  
  return messagebdy_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CausalMessage::set_allocated_messagebdy(::std::string* messagebdy) {
  if (messagebdy != NULL) {
    
  } else {
    
  }
  messagebdy_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), messagebdy);
  // @@protoc_insertion_point(field_set_allocated:message.CausalMessage.messageBdy)
}

// .message.CausalMessage.Matrix matrix = 2;
inline bool CausalMessage::has_matrix() const {
  return this != internal_default_instance() && matrix_ != NULL;
}
inline void CausalMessage::clear_matrix() {
  if (GetArenaNoVirtual() == NULL && matrix_ != NULL) {
    delete matrix_;
  }
  matrix_ = NULL;
}
inline const ::message::CausalMessage_Matrix& CausalMessage::matrix() const {
  const ::message::CausalMessage_Matrix* p = matrix_;
  // @@protoc_insertion_point(field_get:message.CausalMessage.matrix)
  return p != NULL ? *p : *reinterpret_cast<const ::message::CausalMessage_Matrix*>(
      &::message::_CausalMessage_Matrix_default_instance_);
}
inline ::message::CausalMessage_Matrix* CausalMessage::release_matrix() {
  // @@protoc_insertion_point(field_release:message.CausalMessage.matrix)
  
  ::message::CausalMessage_Matrix* temp = matrix_;
  matrix_ = NULL;
  return temp;
}
inline ::message::CausalMessage_Matrix* CausalMessage::mutable_matrix() {
  
  if (matrix_ == NULL) {
    matrix_ = new ::message::CausalMessage_Matrix;
  }
  // @@protoc_insertion_point(field_mutable:message.CausalMessage.matrix)
  return matrix_;
}
inline void CausalMessage::set_allocated_matrix(::message::CausalMessage_Matrix* matrix) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete matrix_;
  }
  if (matrix) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      matrix = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, matrix, submessage_arena);
    }
    
  } else {
    
  }
  matrix_ = matrix;
  // @@protoc_insertion_point(field_set_allocated:message.CausalMessage.matrix)
}

// int32 srcID = 3;
inline void CausalMessage::clear_srcid() {
  srcid_ = 0;
}
inline ::google::protobuf::int32 CausalMessage::srcid() const {
  // @@protoc_insertion_point(field_get:message.CausalMessage.srcID)
  return srcid_;
}
inline void CausalMessage::set_srcid(::google::protobuf::int32 value) {
  
  srcid_ = value;
  // @@protoc_insertion_point(field_set:message.CausalMessage.srcID)
}

// int32 destID = 4;
inline void CausalMessage::clear_destid() {
  destid_ = 0;
}
inline ::google::protobuf::int32 CausalMessage::destid() const {
  // @@protoc_insertion_point(field_get:message.CausalMessage.destID)
  return destid_;
}
inline void CausalMessage::set_destid(::google::protobuf::int32 value) {
  
  destid_ = value;
  // @@protoc_insertion_point(field_set:message.CausalMessage.destID)
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace message

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_message_2eproto__INCLUDED
